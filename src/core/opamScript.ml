let complete =
"_opam_add()\n{\n  _opam_reply=\"$_opam_reply $1\"\n}\n\n_opam_global_options()\n{\n  local res\n  res=\"$( opam --help=plain 2>/dev/null | grep '^       -' | sed 's/ *//;s/[ ,\\[\\=].*//' )\"\n  _opam_add \"$res\"\n}\n\n_opam_commands()\n{\n  local res\n  res=\"$( opam help topics )\"\n  _opam_add \"$res\"\n}\n\n_opam_flags()\n{\n  local res cmd\n  cmd=\"$1\"\n  res=\"$( opam $cmd --help=plain 2>/dev/null | grep '^       -' | sed 's/ *//;s/[ ,\\[\\=].*//' )\"\n  _opam_add \"$res\"\n}\n\n_opam_packages()\n{\n  local res\n  res=\"$( opam list -s )\"\n  _opam_add \"$res\"\n}\n\n_opam_installed_packages()\n{\n  local res\n  res=\"$( opam list -i -s )\"\n  _opam_add \"$res\"\n}\n\n_opam_compilers()\n{\n  local res\n  res=\"$( opam switch -s )\"\n  _opam_add \"$res\"\n}\n\n_opam_config_subcommands()\n{\n  _opam_add \"env var list subst includes bytecomp asmcomp bytelink asmlink\"\n}\n\n_opam_config_vars()\n{\n  local res\n  res=\"$( opam config list 2>/dev/null | sed 's/ *//;s/ .*//' )\"\n  _opam_reply=\"$res\"\n}\n\n_opam_repository_subcommands()\n{\n  _opam_add \"add remove list priority\"\n}\n\n_opam_repositories()\n{\n  local res\n  res=\"$( opam remote -s )\"\n  _opam_add \"$res\"\n}\n\n_opam_repositories_only()\n{\n  _opam_reply=\"$( opam remote -s )\"\n}\n\n_opam()\n{\n  local cmd cur prev\n\n  COMPREPLY=()\n  cmd=${COMP_WORDS[1]}\n  subcmd=${COMP_WORDS[2]}\n  cur=${COMP_WORDS[COMP_CWORD]}\n  prev=${COMP_WORDS[COMP_CWORD-1]}\n  _opam_reply=\"\"\n\n  _opam_global_options\n\n  if [ $COMP_CWORD -eq 1 ]; then\n      _opam_commands\n  elif [ $COMP_CWORD -gt 1 ]; then\n      _opam_flags \"$cmd\"\n      case \"$cmd\" in\n          install|info)\n              _opam_packages\n              ;;\n          reinstall|remove)\n              _opam_installed_packages\n              ;;\n          switch)\n              _opam_compilers\n              ;;\n          config)\n              _opam_config_subcommands\n              if [ \"$prev\" = \"var\" ]; then _opam_config_vars; fi\n              ;;\n          repository)\n              _opam_repository_subcommands\n              case \"$subcmd\" in\n                  remove)\n                      _opam_repositories_only\n                      ;;\n              esac\n              ;;\n          update)\n              _opam_repositories\n              ;;\n      esac\n\n  fi\n\n  COMPREPLY=( $(compgen -W \"$_opam_reply\" -- $cur) )\n  unset _opam_reply\n  return 0\n}\n\ncomplete -F _opam opam\n"

let complete_zsh =
"_opam_add()\n{\n  _opam_reply=\"$_opam_reply $1\"\n}\n\n_opam_global_options()\n{\n  local res\n  res=\"$( opam --help=plain 2>/dev/null | grep '^       -' | sed 's/ *//;s/[ ,\\[\\=].*//' )\"\n  _opam_add \"$res\"\n}\n\n_opam_commands()\n{\n  local res\n   res=\"$( opam help topics )\"\n  _opam_add \"$res\"\n}\n\n_opam_flags()\n{\n  local res cmd\n  cmd=\"$1\"\n  res=\"$( opam $cmd --help=plain 2>/dev/null | grep '^       -' | sed 's/ *//;s/[ ,\\[\\=].*//' )\"\n  _opam_add \"$res\"\n}\n\n_opam_packages()\n{\n  local res\n   res=\"$( opam list -s )\"\n  _opam_add \"$res\"\n}\n\n_opam_installed_packages()\n{\n  local res\n   res=\"$( opam list -i -s )\"\n  _opam_add \"$res\"\n}\n\n_opam_compilers()\n{\n  local res count\n  res=\"$( opam switch -s )\"\n  _opam_add \"$res\"\n}\n\n_opam_config_subcommands()\n{\n  _opam_add \"env var list subst includes bytecomp asmcomp bytelink asmlink\"\n}\n\n_opam_config_vars()\n{\n  local res\n  res=\"$( opam config list 2>/dev/null | sed 's/ *//;s/ .*//' )\"\n  _opam_reply=\"$res\"\n}\n\n_opam_repository_subcommands()\n{\n  _opam_add \"add remove list priority\"\n}\n\n_opam_repositories()\n{\n  local res\n  res=\"$( opam remote -s )\"\n  _opam_add \"$res\"\n}\n\n_opam_repositories_only()\n{\n  _opam_reply=\"$( opam remote -s )\"\n}\n_opam()\n{\n  local cmd cur prev\n\n  COMPREPLY=()  \n  cmd=${COMP_WORDS[1]}\n  subcmd=${COMP_WORDS[2]}\n  cur=${COMP_WORDS[COMP_CWORD]}\n  prev=${COMP_WORDS[COMP_CWORD-1]}\n  _opam_reply=\"\"\n\n  _opam_global_options\n\n  if [ $COMP_CWORD -eq 1 ]; then\n      _opam_commands\n  elif [ $COMP_CWORD -gt 1 ]; then\n      _opam_flags \"$cmd\"\n      case \"$cmd\" in\n          install)\n              _opam_packages\n              ;;\n          remove)\n              _opam_installed_packages\n              ;;\n          switch)\n              _opam_compilers\n              ;;\n          config)\n              if [ \"$prev\" = \"-var\" ]; then _opam_config_vars; fi\n              ;;\n      esac\n\n  fi\n\n  COMPREPLY=( $(compgen -W \"$_opam_reply\" -- $cur) )\n  unset _opam_reply\n  return 0\n}\n\nautoload bashcompinit\nbashcompinit\ncomplete -F _opam opam\n"

let switch_eval =
"function opam-switch-eval () {\n    opam switch \"$@\" --no-warning\n    eval $(opam config env)\n}\n"

